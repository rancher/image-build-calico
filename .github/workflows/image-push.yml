on:
  release:
    types: [published]

env:
  REGISTRY_IMAGE: rancher/hardened-calico
  GITHUB_ACTION_TAG: ${{ github.ref_name }}  

jobs:
  build-amd64-digest:
    permissions:
      contents: read
      id-token: write
    runs-on: runs-on,runner=4cpu-linux-x64,run-id=${{ github.run_id }}
    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set the TAG value
      id: get-TAG
      run: |
        echo "$(make -s log | grep TAG)" >> "$GITHUB_ENV"

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Docker meta
      id: meta-amd64
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY_IMAGE }}

    - name: "Read secrets"
      uses: rancher-eio/read-vault-secrets@main
      with:
        secrets: |
          secret/data/github/repo/${{ github.repository }}/dockerhub/${{ github.repository_owner }}/credentials username | DOCKER_USERNAME ;
          secret/data/github/repo/${{ github.repository }}/dockerhub/${{ github.repository_owner }}/credentials password | DOCKER_PASSWORD

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Container Registry
      uses: docker/login-action@v3
      with:
        username: ${{ env.DOCKER_USERNAME }}
        password: ${{ env.DOCKER_PASSWORD }}

    - name: Build container image
      id: build-amd64
      uses: docker/build-push-action@v6
      with:
        context: .
        file: Dockerfile
        platforms: linux/amd64
        labels: ${{ steps.meta-amd64.outputs.labels }}
        outputs: type=image,name=${{ env.REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true,push=true
        build-args: |
          TAG=${{ env.TAG }}

    - name: Export digest
      run: |
        mkdir -p /tmp/digests
        digest="${{ steps.build-amd64.outputs.digest }}"
        touch "/tmp/digests/${digest#sha256:}"

    - name: Upload digest
      uses: actions/upload-artifact@v4
      with:
        name: digests-linux-amd64
        path: /tmp/digests/*
        if-no-files-found: error
        retention-days: 1

  build-arm64-digest:
    permissions:
      contents: read
      id-token: write
    runs-on: runs-on,runner=4cpu-linux-arm64,run-id=${{ github.run_id }}
    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set the TAG value
      id: get-TAG
      run: |
        echo "$(make -s log | grep TAG)" >> "$GITHUB_ENV"

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Docker meta
      id: meta-arm64
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY_IMAGE }}

    - name: "Read secrets"
      uses: rancher-eio/read-vault-secrets@main
      with:
        secrets: |
          secret/data/github/repo/${{ github.repository }}/dockerhub/${{ github.repository_owner }}/credentials username | DOCKER_USERNAME ;
          secret/data/github/repo/${{ github.repository }}/dockerhub/${{ github.repository_owner }}/credentials password | DOCKER_PASSWORD

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Container Registry
      uses: docker/login-action@v3
      with:
        username: ${{ env.DOCKER_USERNAME }}
        password: ${{ env.DOCKER_PASSWORD }}

    - name: Build container image
      id: build-arm64
      uses: docker/build-push-action@v6
      with:
        context: .
        file: Dockerfile
        platforms: linux/arm64
        labels: ${{ steps.meta-arm64.outputs.labels }}
        outputs: type=image,name=${{ env.REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true,push=true
        build-args: |
          TAG=${{ env.TAG }}

    - name: Export digest
      run: |
        mkdir -p /tmp/digests
        digest="${{ steps.build-arm64.outputs.digest }}"
        touch "/tmp/digests/${digest#sha256:}"

    - name: Upload digest
      uses: actions/upload-artifact@v4
      with:
        name: digests-linux-arm64
        path: /tmp/digests/*
        if-no-files-found: error
        retention-days: 1
  merge:
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    needs:
      - build-amd64-digest
      - build-arm64-digest
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-*
          merge-multiple: true
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}
      
      - name: "Read secrets"
        uses: rancher-eio/read-vault-secrets@main
        with:
          secrets: |
            secret/data/github/repo/${{ github.repository }}/dockerhub/${{ github.repository_owner }}/credentials username | DOCKER_USERNAME ;
            secret/data/github/repo/${{ github.repository }}/dockerhub/${{ github.repository_owner }}/credentials password | DOCKER_PASSWORD
    
      - name: Login to Container Registry
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)          
      
      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:${{ steps.meta.outputs.version }}
